name: Check for Backrest Release

on:
  schedule:
    - cron: "0 0 */2 * *" # At 00:00 UTC every 2nd day of the month
  workflow_dispatch:

jobs:
  check_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest and stored release
        id: versions
        run: |
          latest=$(curl -s https://api.github.com/repos/garethgeorge/backrest/releases/latest | jq -r .tag_name)
          stored=$(cat BACKREST_RELEASE 2>/dev/null || echo "v0.0.0")
          echo "latest=$latest" >> $GITHUB_OUTPUT
          echo "stored=$stored" >> $GITHUB_OUTPUT
          echo "new_release=$([ "$latest" != "$stored" ] && echo true || echo false)" >> $GITHUB_OUTPUT

      - name: Update BACKREST_RELEASE and push
        if: steps.versions.outputs.new_release == 'true'
        run: |
          echo "${{ steps.versions.outputs.latest }}" > BACKREST_RELEASE
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add BACKREST_RELEASE
          git commit -m "Update stored release to ${{ steps.versions.outputs.latest }}"
          git pull --rebase
          git push

      - name: Trigger publish workflow
        if: steps.versions.outputs.new_release == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "publish.yml",
              ref: "main"
            });
